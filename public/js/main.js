// imports will always go at the top
import ChatMsg from './components/ChatMessage.js';
import Insert from './components/InsertNotification.js';

const socket = io();


// utility functions for socket
function setUserID({ sID }) {
    // save our unique ID generated by Socket on the server side - this is how we track individual connections to the chat service
    vm.socketID = sID;

}

function showNewMessage({ message }) {
    // debugger;
 vm.messages.push(message);


}

function handleUserTyping(insert) {
    vm.insertings.push(insert);
    
    setTimeout(function() {
        // Find the index of the inserted element in the array
        const index = vm.insertings.indexOf(insert);
    
        // If the element still exists in the array, remove it
        if (index !== -1) {
          vm.insertings.splice(index, 1);
        }
      }, 3000);
}

const { createApp } = Vue 

const vm = createApp({
    data() {
      return {
        socketID: '',
        message: '',
        messages: [],
        nickname: '',
        insert : '',
        insertings : []
      }
    },

    methods: {
        dispatchMessage() {
            socket.emit('chat_message', {
                content: this.message,
                name: this.nickname || 'anonymous',
                id: this.socketID
            })

            this.message = "";

        }, 

        catchTextFocus() {
            // emit a custom typing event and broadcast it to the server
            socket.emit('user_typing', {
                name: this.nickname || 'anonymous'
            })

            this.insert= "";
       
        }
     },

    components: {
        newmsg: ChatMsg,
        newinsert: Insert
    }
  }).mount('#app')

  socket.addEventListener('connected', setUserID);
  socket.addEventListener('new_message', showNewMessage);
  socket.addEventListener('typing', handleUserTyping);
